protocol:
  search_route:
    mapping:
      - beckn_key: context.bap_id
        value: session.bap_id
      - beckn_key: context.bap_uri
        value: session.bap_uri
      - beckn_key: context.location.country.code
        value: session.country
      - beckn_key: context.location.city.code
        value: session.cityCode
      - beckn_key: context.transaction_id
        value: session.transaction_id
      - beckn_key: context.message_id
        value: messageId
      - beckn_key: context.timestamp
        value: timestamp
      - beckn_key: context.domain
        value: session.domain
      - beckn_key: context.version
        value: session.version
      - beckn_key: context.ttl
        value: session.ttl
      - beckn_key: context.action
        value: action

      - beckn_key: message.intent.fulfillment.stops[0].type
        value: "START"
      - beckn_key: message.intent.fulfillment.stops[0].location.descriptor.gps
        value: data.startCoordinates

  search_trip:
    mapping:
      - beckn_key: context.bap_id
        value: session.bap_id
      - beckn_key: context.bap_uri
        value: session.bap_uri
      - beckn_key: context.location.country.code
        value: session.country
      - beckn_key: context.location.city.code
        value: session.cityCode
      - beckn_key: context.transaction_id
        value: session.transaction_id
      - beckn_key: context.message_id
        value: messageId
      - beckn_key: context.timestamp
        value: timestamp
      - beckn_key: context.domain
        value: session.domain
      - beckn_key: context.version
        value: session.version
      - beckn_key: context.ttl
        value: session.ttl
      - beckn_key: context.action
        value: action

      - beckn_key: message.intent.fulfillment.stops[0].type
        value: "START"
      - beckn_key: message.intent.fulfillment.stops[0].location.descriptor.gps
        value: data.startCoordinates
      - beckn_key: message.intent.fulfillment.stops[0].time.label
        value: String
      - beckn_key: message.intent.fulfillment.stops[0].time.timestamp
        value:  timestamp
      - beckn_key: message.intent.fulfillment.stops[1].type
        value: "END"
      - beckn_key: message.intent.fulfillment.stops[1].location.descriptor.gps
        value: data.endCoordinates
      - beckn_key: message.intent.fulfillment.vehicle.category
        value: data.vehicleCategaory || session.vehicleCategaory

      - beckn_key: message.intent.payment.tags
        value: data.paymentTagsSearch
        compute: buildTags(data.paymentTagsSearch)


select:
    mapping:
      - beckn_key: context.bap_id
        value: session.bap_id
      - beckn_key: context.bap_uri
        value: session.bap_uri
      - beckn_key: context.bpp_id
        value: session.bpp_id
      - beckn_key: context.bpp_uri
        value: session.bpp_uri
      - beckn_key: context.location.country.code
        value: session.country
      - beckn_key: context.location.city.code
        value: session.cityCode
      - beckn_key: context.transaction_id
        value: session.transaction_id
      - beckn_key: context.message_id
        value: messageId
      - beckn_key: context.timestamp
        value: timestamp
      - beckn_key: context.domain
        value: session.domain
      - beckn_key: context.version
        value: session.version
      - beckn_key: context.ttl
        value: session.ttl
      - beckn_key: context.action
        value: action   

      - beckn_key: message.order.items[0].id
        value: data.itemId
      - beckn_key: message.order.items[0].quantity.selected.count
        value: data.count
      - beckn_key: message.order.provider.id
        value: data.providerId 
      - beckn_key: message.order.fulfillments[0].id
        value: data.fulfillmentId
      - beckn_key: message.order.fulfillments[1].stops.id[0]
        value: data.stopID
      - beckn_key: message.order.fulfillments[1].stops.id[1]
        value: data.stopID  
      - beckn_key: message.order.fulfillments.tags
        value: data.seatgridtags
        compute: data.seatGridTags


init:
    mapping:
      - beckn_key: context.bap_id
        value: session.bap_id
      - beckn_key: context.bap_uri
        value: session.bap_uri
      - beckn_key: context.bpp_id
        value: session.bpp_id
      - beckn_key: context.bpp_uri
        value: session.bpp_uri
      - beckn_key: context.location.country.code
        value: session.country
      - beckn_key: context.location.city.code
        value: session.cityCode
      - beckn_key: context.transaction_id
        value: session.transaction_id
      - beckn_key: context.message_id
        value: messageId
      - beckn_key: context.timestamp
        value: timestamp
      - beckn_key: context.domain
        value: session.domain
      - beckn_key: context.version
        value: session.version
      - beckn_key: context.ttl
        value: session.ttl
      - beckn_key: context.action
        value: action   

      - beckn_key: message.order.items[0].id
        value: session.itemId
      - beckn_key: message.order.items[0].quantity.selected.count
        value: session.quantitySelected
      - beckn_key:
        value: 
      - beckn_key: message.order.provider.id
        value: session.providerId
      - beckn_key: message.order.billing.name
        value: data.name
      - beckn_key: message.order.billing.email
        value: data.email
      - beckn_key: message.order.billing.phone
        value: data.phone
      - beckn_key: message.order.payments[0].collected_by
        value: data.collectedBy
      - beckn_key: message.order.payments[0].status
        value: data.paymentStatus
      - beckn_key: message.order.payments[0].type
        value: data.paymentType
      - beckn_key: message.order.payments[0].tags
        value: data.paymentTagsInit
        compute: buildTags(data.paymentTagsInit)     

confirm:
    mapping:
      - beckn_key: context.bap_id
        value: session.bap_id
      - beckn_key: context.bap_uri
        value: session.bap_uri
      - beckn_key: context.bpp_id
        value: session.bpp_id
      - beckn_key: context.bpp_uri
        value: session.bpp_uri
      - beckn_key: context.location.country.code
        value: session.country
      - beckn_key: context.location.city.code
        value: session.cityCode
      - beckn_key: context.transaction_id
        value: session.transaction_id
      - beckn_key: context.message_id
        value: messageId
      - beckn_key: context.timestamp
        value: timestamp
      - beckn_key: context.domain
        value: session.domain
      - beckn_key: context.version
        value: session.version
      - beckn_key: context.ttl
        value: session.ttl
      - beckn_key: context.action
        value: action 

      - beckn_key: message.order.items[0].id
        value: session.itemId
      - beckn_key: message.order.items[0].quantity.selected.count
        value: session.quantitySelected
      - beckn_key: message.order.provider.id
        value: session.providerId

      - beckn_key: message.order.fulfillments[0].id
        value: session.fulfillmentId
      - beckn_key: message.order.fulfillments[1].stops[0].id
        value: session.stopId
      - beckn_key: message.order.fulfillments[1].stops[1].id
        value: session.stopId
      - beckn_key: message.order.fulfillments.customer.person.name
        value: session.name
      - beckn_key: message.order.fulfillments.customer.person.age
        value: session.age
      - beckn_key: message.order.fulfillments.customer.person.gender
        value: session.gender
      - beckn_key: message.order.fulfillments.customer.contact.phone
        value: session.phone


      - beckn_key: message.order.billing.name
        value: session.name
      - beckn_key: message.order.billing.email
        value: session.email
      - beckn_key: message.order.billing.phone
        value: session.phone

      - beckn_key: message.order.payments[0].id
        value: data.paymentId
      - beckn_key: message.order.payments[0].collected_by
        value: data.collectedByConfirm
      - beckn_key: message.order.payments[0].status
        value: data.paymentStatusConfirm
      - beckn_key: message.order.payments[0].type
        value: data.paymentTypeConfirm
      - beckn_key: message.order.payments[0].params.transaction_id
        value: data.paymentTranscationId
      - beckn_key: message.order.payments[0].params.currency
        value: data.currency
      - beckn_key: message.order.payments[0].params.amount
        value: data.amount
      - beckn_key: message.order.payments[0].tags
        value: data.paymentTagsConfirm
        compute: buildTags(data.paymentTagsConfirm)  

status:
    mapping:
      - beckn_key: context.bap_id
        value: session.bap_id
      - beckn_key: context.bap_uri
        value: session.bap_uri
      - beckn_key: context.bpp_id
        value: session.bpp_id
      - beckn_key: context.bpp_uri
        value: session.bpp_uri
      - beckn_key: context.location.country.code
        value: session.country
      - beckn_key: context.location.city.code
        value: session.cityCode
      - beckn_key: context.transaction_id
        value: session.transaction_id
      - beckn_key: context.message_id   
        value: messageId
      - beckn_key: context.timestamp
        value: timestamp
      - beckn_key: context.domain
        value: session.domain
      - beckn_key: context.version
        value: session.version
      - beckn_key: context.ttl
        value: session.ttl
      - beckn_key: context.action
        value: action

      - beckn_key: message.order_id
        value: data.orderId    

on_search_route:
    mapping:
      - business_key: "name"
        extractionPath: message.catalog.descriptor.name
      - business_key: "bpp_id"
        extractionPath: context.bpp_id
      - business_key: "bpp_uri"
        extractionPath: context.bpp_uri
      - business_key: "location"
        extractionPath: "message.catalog.providers[].fulfillments[].stops[]{locationName: location.descriptor.code}"          

on_search_trip:
    mapping:
      - business_key: "name"
        extractionPath: "message.catalog.descriptor.name"

on_select:
    mapping:
      - business_key: breakup
        extractionPath: "message.order.quote.breakup[]{type: title, totalPrice: price.value, UOP: price.currency}"     

on_init:
    mapping:
      - business_key: paymentDetails
        extractionPath: "message.order.payments[]{id: id, type: type, status: status}"

on_confirm:
    mapping:
      - business_key: "orderId"
        extractionPath: message.order.id
      - business_key: "status"
        extractionPath: message.order.status
      - business_key: "QR code"
        extractionPath: 'message.order.fulfillments[]{providerId: id}.stops[?(type === "START")]{token: authorization.token, status: authorization.status}'

on_status:
    mapping:
      - business_key: "status"
        extractionPath: message.order.status

                 
       
